// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  socialAccounts   SocialAccount[]
  conversations    Conversation[]
  scheduledPosts   ScheduledPost[]

  @@map("users")
}

model SocialAccount {
  id           String   @id @default(cuid())
  userId       String
  platform     Platform
  accountId    String
  accountName  String
  accessToken  String   // Encrypted
  refreshToken String?  // Encrypted
  tokenExpiry  DateTime?
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  scheduledPosts ScheduledPost[]

  @@unique([userId, platform])
  @@map("social_accounts")
}

model Conversation {
  id        String   @id @default(cuid())
  userId    String
  title     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("conversations")
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  role           Role
  content        String
  timestamp      DateTime @default(now())

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@map("messages")
}

model ScheduledPost {
  id              String     @id @default(cuid())
  userId          String
  socialAccountId String
  content         String
  mediaUrl        String?
  mediaType       MediaType?
  scheduledTime   DateTime
  status          PostStatus @default(PENDING)
  platform        Platform
  platformPostId  String?
  error           String?
  retryCount      Int        @default(0)
  maxRetries      Int        @default(3)
  useUserTokens   Boolean    @default(true)
  fallbackToGlobal Boolean   @default(true)
  postType        PostType   @default(STANDARD)
  postOptions     Json?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  socialAccount SocialAccount @relation(fields: [socialAccountId], references: [id], onDelete: Cascade)

  @@map("scheduled_posts")
}

enum Platform {
  TWITTER
  LINKEDIN
  INSTAGRAM
}

enum Role {
  USER
  ASSISTANT
}

enum MediaType {
  IMAGE
  VIDEO
  GIF
}

enum PostStatus {
  PENDING  cd Backend
  npx prisma migrate dev --name add_posting_features
  PROCESSING
  POSTED
  FAILED
  CANCELLED
}

enum PostType {
  STANDARD
  THREAD
  REPLY
  RETWEET
}